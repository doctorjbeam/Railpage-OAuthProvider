{"name":"Railpage-oauthprovider","body":"Railpage-OAuthProvider\r\n============\r\n\r\nThis project was forked from djpate/OAuthProviderExample\r\n\r\nWhat is this project?\r\n---------------------\r\n\r\nI needed some way of authenticating users against the database when not using the Railpage site - the search API and any handheld apps spring to mind as examples.\r\n\r\nWhat does it do?\r\n----------------\r\n\r\n* Creates token and token_secret\r\n* Assigns a user ID to that token\r\n* Provides a callback URL for each token\r\n\r\nContributing\r\n------------\r\n\r\nAnyone is free to fork this code as they see it, but be warned: it does have a lot of Railpage-specific alterations. RP devs can of course fork and use this code. \r\n\r\nChanges from upstream\r\n---------------------\r\n\r\n* The User class has been renamed to OAuthUser as it was causing conflicts. \r\n* Eventually this will be modified to use namespaces, as per RP's direction\r\n* __autoload() functions have been replaced with spl_autoload_register(), which are defined in mainfile.php (outside the scope of this project)\r\n* Database column names have been changed to suit Railpage\r\n\r\n### Author\r\nAuthored by Michael Greenhill. Licensed under MIT License.\r\n","tagline":"OAuth provider in PHP","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}